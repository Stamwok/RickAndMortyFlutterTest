// Mocks generated by Mockito 5.3.2 from annotations
// in rick_n_morty_flutter_app/test/chacracters_list_test/characters_list_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:rick_n_morty_flutter_app/models/character.dart' as _i2;

import 'characters_list_test.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCharacter_0 extends _i1.SmartFake implements _i2.Character {
  _FakeCharacter_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [CharacterServiceTest].
///
/// See the documentation for Mockito's code generation for more information.
class MockCharacterServiceTest extends _i1.Mock
    implements _i3.CharacterServiceTest {
  MockCharacterServiceTest() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i2.Character>> getCharactersList() => (super.noSuchMethod(
        Invocation.method(
          #getCharactersList,
          [],
        ),
        returnValue: _i4.Future<List<_i2.Character>>.value(<_i2.Character>[]),
      ) as _i4.Future<List<_i2.Character>>);
  @override
  _i4.Future<List<_i2.Character>> getMoreCharacters() => (super.noSuchMethod(
        Invocation.method(
          #getMoreCharacters,
          [],
        ),
        returnValue: _i4.Future<List<_i2.Character>>.value(<_i2.Character>[]),
      ) as _i4.Future<List<_i2.Character>>);
  @override
  _i4.Future<_i2.Character> getCharacterDetailInfo(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCharacterDetailInfo,
          [id],
        ),
        returnValue: _i4.Future<_i2.Character>.value(_FakeCharacter_0(
          this,
          Invocation.method(
            #getCharacterDetailInfo,
            [id],
          ),
        )),
      ) as _i4.Future<_i2.Character>);
}
